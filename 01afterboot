#!/system/bin/sh
#
# W.I.P. script, made by USBhost.
# for this script to work you'll need busbox,
# if not supplied. made for the Nexus 9.
#

log -p i -t FI.d " after boot "

# overclocking.
## (0 = disabled) (1 = enabled)
	OC=0

# CPU Interactive Governor fix.
# this will increase battery life.
## (0 = disabled) (1 = enabled)
	Gfix=0

# fsync. / lets not have this option on by default.
## (0 = disabled) (1 = enabled)
	#echo 1 > /sys/module/sync/parameters/fsync_enabled

# fast charge.
## (0 = disabled) (1 = enabled)
	echo 1 > /sys/kernel/fast_charge/force_fast_charge

# DTW. historic record / if disabled you will get problems with sleep.
	#echo 0 > /sys/devices/platform/spi-tegra114.2/spi_master/spi2/spi2.0/input/input0/wake_gesture

# set debug to NO.
	echo N > /sys/kernel/debug/debug_enabled

# I/O tweaks
	echo 0 > /sys/block/mmcblk0/queue/add_random
	echo 768 > /sys/block/mmcblk0/queue/read_ahead_kb

# entropy tweaks
	echo 896 > /proc/sys/kernel/random/write_wakeup_threshold

# config cfq i/o gov for ssds / historic record, we dont use cfq anymore
	#echo 0 > /sys/block/mmcblk0/queue/iosched/slice_idle
	#echo 64 > /sys/block/mmcblk0/queue/iosched/quantum
	#echo 1 > /sys/block/mmcblk0/queue/iosched/group_idle

#   ------------------------<MEMORY>-----------------------   #

# Ultra Kernel Samepage Merging
## (0 = disabled) (1 = enabled)
	echo 1 > /sys/kernel/mm/uksm/run

# config memory.
	echo 10972 > /proc/sys/vm/extra_free_kbytes
	echo 5486 > /proc/sys/vm/min_free_kbytes
	echo 100 > /proc/sys/vm/vfs_cache_pressure
	echo 60 > /proc/sys/vm/swappiness
	echo 0 > /proc/sys/vm/page-cluster

# config Low Memory Killer / keep within the bounds
	echo "18432,23040,27648,32256,36864,41472" > /sys/module/lowmemorykiller/parameters/minfree

# turn off Low Memory Killer
## (0 = disabled) (1 = enabled)
# ONLY! if your like me / vary memory conscious
# and always clears recents, then you can use this.
	LMK=0

# ZRAM
# zrswap and aswap will be made null.
## (0 = disabled) (1 = enabled)
# you can still use cswap but it
# will be second priority.
# zsize is in MB.
	zram=0
	zsize=0

# cache swap
## (0 = disabled) (1 = enabled)
# will make a swap file in /cache.
# czsize must not go over 150
# or f2fs /cache wont work.
# czsize is in MB.
	cswap=0
	czsize=100

# make /cache all swap
# cswap and czsize will be null
## (0 = disabled) (1 = enabled)
# swap will be 260 MB.
	aswap=0

# null if zram is enabled
## (0 = disabled) (1 = enabled)
# use zram with swap
# with a raid 0 like way.
	zrswap=0

#   ------------------------<EXPERT>-----------------------   #

# Load override
if [ -e /sdcard/override ]; then
	. /sdcard/override
	log -p i -t FI.d " override; loaded "
else
	log -p i -t FI.d " no override; skipping "
fi
if [ -e /cache/swap ] && [ "$cswap" == "1" ] && [ "$aswap" == "0" ] && [ "$zrswap" == "0" ]; then
	fstrim -v /cache
	/BB/busybox mkswap /cache/swap
	chmod 600 /cache/swap
	if [ "$zram" == "1" ]; then
		/BB/busybox swapon -d -p 1 /cache/swap
	elif [ "$zram" == "0" ]; then
		/BB/busybox swapon -d -p 2 /cache/swap
	fi
fi
if [ "$cswap" == "1" ] && [ "$aswap" == "0" ]; then
	if [ -e /cache/swap ]; then
		fstrim -v /cache
		/BB/busybox mkswap /cache/swap
		chmod 600 /cache/swap
	else
		dd if=/dev/zero of=/cache/swap bs="$czsize"m count=1
		fstrim -v /cache
		/BB/busybox mkswap /cache/swap
		chmod 600 /cache/swap
	fi
	if [ "$zram" == "1" ] && [ "$zrswap" == "0" ]; then
		/BB/busybox swapon -d -p 1 /cache/swap
	elif [ "$zram" == "0" ] && [ "$zrswap" == "1" ]; then
		/BB/busybox swapon -d -p 2 /cache/swap
	fi
	if [ "$zram" == "0" ] && [ "$zrswap" == "1" ]; then
		echo 1 > /sys/block/zram0/reset
		echo 3 > /sys/block/zram0/max_comp_streams
		echo lz4 > /sys/block/zram0/comp_algorithm
		echo "$czsize"M > /sys/block/zram0/disksize
		/BB/busybox mkswap /dev/block/zram0
		/BB/busybox swapon -d -p 2 /dev/block/zram0
	fi
fi
if [ "$aswap" == "1" ] && [ "$zram" == "0" ]; then
	umount /cache || log -p i -t FI.d " cache was not mounted at start "
	/BB/busybox mount -t tmpfs -o rw tmpfs /cache && log -p i -t FI.d " mounted cache as tmpfs "
	/BB/busybox mkswap /dev/block/platform/sdhci-tegra.3/by-name/CAC
	/BB/busybox swapon -d -p 2 /dev/block/platform/sdhci-tegra.3/by-name/CAC
	if [ "$zrswap" == "1" ]; then
		echo 1 > /sys/block/zram0/reset
		echo 3 > /sys/block/zram0/max_comp_streams
		echo lz4 > /sys/block/zram0/comp_algorithm
		echo 260M > /sys/block/zram0/disksize
		/BB/busybox mkswap /dev/block/zram0
		/BB/busybox swapon -d -p 2 /dev/block/zram0
	fi
fi
if [ "$zram" == "1" ] && [ "$aswap" == "0" ]; then
	echo 1 > /sys/block/zram0/reset
	echo 3 > /sys/block/zram0/max_comp_streams
	echo lz4 > /sys/block/zram0/comp_algorithm
	echo "$zsize"M > /sys/block/zram0/disksize
	/BB/busybox mkswap /dev/block/zram0
	/BB/busybox swapon -d -p 2 /dev/block/zram0
fi
if [ "$OC" == "1" ]; then
	echo 2499000 > /sys/module/cpu_tegra/parameters/cpu_user_cap
elif [ "$OC" == "0" ]; then
	echo 1 > /sys/kernel/tegra_gpu/gpu_cap_state
	echo 852000000 > /sys/kernel/tegra_gpu/gpu_cap_rate
fi
if [ "$Gfix" == "1" ]; then
	echo 612000 > /sys/devices/system/cpu/cpufreq/interactive/hispeed_freq
	echo "65 510000:75 714000:85" > /sys/devices/system/cpu/cpufreq/interactive/target_loads
	chmod 444 /sys/devices/system/cpu/cpufreq/interactive/hispeed_freq
	chmod 444 /sys/devices/system/cpu/cpufreq/interactive/target_loads
fi
if [ "$LMK" == "1" ]; then
	#echo 1 > /proc/sys/vm/oom_kill_allocating_task # this can break stuff so be careful
	echo "0" > /sys/module/lowmemorykiller/parameters/minfree  
fi
if [ -e /cache/swap ] && [ "$cswap" == "0" ] && [ "$zrswap" == "0" ] && [ "$aswap" == "0" ]; then
	rm /cache/swap || chmod 777 /cache/swap && rm /cache/swap
	log -p i -t FI.d " swap file removed "
fi # this must allways be last
log -p i -t FI.d " end of after boot"
