#!/system/bin/sh
#
# W.I.P. script, by USBhost. made for the Nexus 9.
# this script is most likely universal to devises that
# has ZRAM and/or SWAP enabled.
#
# i use busybox for some commands because
# in the hopes of them being newer.
#

log -p i -t FI.d:01afterboot " FIRE-ICE script v29 "

# overclocking.
# CPU 2.5 ghz
# GPU 0.984 ghz
## (0 = disabled) (1 = enabled)
	oc=0

# CPU Interactive Governor fix.
# this will increase battery life
# Note: there will be some lag
## (0 = disabled) (1 = enabled)
	gfix=0

# fsync
## (0 = disabled) (1 = default/enabled)
	fs=1

# fast charge.
## (0 = default/disabled) (1 = enabled)
	fc=1

# double tap to wake
## (0 = disabled) (1 = default/enabled)
	dtw=1

# set debug to NO.
	echo 0 > /sys/kernel/debug/debug_enabled

# I/O tweaks
	echo 0 > /sys/block/mmcblk0/queue/add_random

# entropy tweaks
	echo 320 > /proc/sys/kernel/random/write_wakeup_threshold
	echo 256 > /proc/sys/kernel/random/read_wakeup_threshold

#   ------------------------<MEMORY>-----------------------   #

# Ultra Kernel Samepage Merging
# hmm... does not seem to be needed on MM
## (0 = default/disabled) (1 = enabled) ##
	uksm=1

# tweak/fix memory options .
	echo 5486 > /proc/sys/vm/min_free_kbytes
	echo 100 > /proc/sys/vm/vfs_cache_pressure
	echo 100 > /proc/sys/vm/swappiness
	echo 3 > /proc/sys/vm/page-cluster

# config Low Memory Killer
	chmod 644 /sys/module/lowmemorykiller/parameters/minfree # FIXME: this should be fixed in the ramdisk
	echo "18432,23040,27648,32256,55296,80640" > /sys/module/lowmemorykiller/parameters/minfree

# Low Memory Killer.
# ONLY! if your vary, vary memory conscious
# and always clears recents, then you disable this,
# if your not things will go wrong!
## (0 = disabled) (1 = default/enabled) ##
	lmk=1

# ZRAM.
# "raid" and "aswap" will be null.
# you can still use cswap but it
# will be second priority.
## (0 = disabled) ##
	zswap=0 # "zswap" is in MB.

# swap in cache.
# will make a swap file in /cache.
# "cswap" must not go over 160
# or f2fs /cache will not work.
## (0 = disabled) ##
	cswap=0 # "cswap" is in MB.

# make /cache all swap.
# "cswap" will be null if enabled.
# "swap" will be 260MB, 520MB if "raid" = 1 .
# note: cache will be formated to swap.
## (0 = default/disabled) (1 = enabled) ##
	aswap=0

# use "zswap" and "cswap"
# with a raid 0 like way.
## (0 = default/disabled) (1 = enabled) ##
	raid=0

#   ------------------------<EXPERT>-----------------------   #

	# busybox location
BB=/BB/busybox
	# zram's sys interface
ZRS=/sys/block/zram0
	# zram's block device
ZRB=/dev/block/zram0
	# set zram's working cores
CORE="$(cat /proc/cpuinfo | grep -c processor)"
	# override file
ORID=/sdcard/override
	# cache partition
CACHE=/dev/block/mmcblk0p30
	# swap file
CSWAP=/cache/swap

# Load override
if [ -e $ORID ]; then
	log -p i -t FI.d:01afterboot " $ORID; loading "
	. $ORID
	log -p i -t FI.d:01afterboot " $(cat $ORID) "
else
	log -p i -t FI.d:01afterboot " no $ORID; skipping "
fi
if [ "$uksm" == "1" ]; then
	echo 1000 > /sys/kernel/mm/uksm/sleep_millisecs
	echo 1 > /sys/kernel/mm/uksm/run
fi
if [ "$cswap" -ge "1" ] && [ "$aswap" == "0" ]; then
	if [ -e $CSWAP ]; then
		if [ "$zswap" -ge "1" ] && [ "$raid" == "0" ]; then
			$BB swapon -p 1 $CSWAP # zram only
		elif [ "$zswap" == "0" ] && [ "$raid" == "1" ]; then
			$BB swapon -p 2 $CSWAP # raid 0
		elif [ "$zswap" == "0" ] && [ "$raid" == "0" ]; then
			$BB swapon -d $CSWAP # cswap only
		fi
	else
		dd if=/dev/zero of=$CSWAP bs="$cswap"m count=1
		chmod 600 $CSWAP
		$BB mkswap $CSWAP
		if [ "$zswap" -ge "1" ] && [ "$raid" == "0" ]; then
			$BB swapon -d -p 1 $CSWAP # zram only
		elif [ "$zswap" == "0" ] && [ "$raid" == "1" ]; then
			$BB swapon -d -p 2 $CSWAP # raid 0
		elif [ "$zswap" == "0" ] && [ "$raid" == "0" ]; then
			$BB swapon -d $CSWAP # cswap only
		fi
	fi
	if [ "$zswap" == "0" ] && [ "$raid" == "1" ]; then
		echo 1 > $ZRS/reset
		echo 1 > $ZRS/max_comp_streams
		echo lz4 > $ZRS/comp_algorithm
		echo "$cswap"M > $ZRS/disksize
		$BB mkswap $ZRB
		$BB swapon -d -p 2 $ZRB
	fi
fi
if [ "$zswap" == "0" ] && [ "$aswap" == "1" ]; then
	umount /cache
	$BB mount -t tmpfs -o rw tmpfs /cache && log -p i -t FI.d:01afterboot " mounted cache as tmpfs "
	$BB mkswap $CACHE # FIXME: make it run only once
	$BB swapon -d -p 1 $CACHE
	if [ "$raid" == "1" ]; then
		echo 1 > $ZRS/reset
		echo 1 > $ZRS/max_comp_streams
		echo lz4 > $ZRS/comp_algorithm
		echo 260M > $ZRS/disksize
		$BB mkswap $ZRB
		$BB swapon -d -p 1 $ZRB
	fi
fi
if [ "$zswap" -gt "1" ] && [ "$aswap" == "0" ]; then
	echo 1 > $ZRS/reset
	echo "$CORE" > $ZRS/max_comp_streams
	echo lz4 > $ZRS/comp_algorithm
	#echo 600M > $ZRS/mem_limit # safety limit
	echo "$zswap"M > $ZRS/disksize
	$BB mkswap $ZRB
	$BB swapon -d -p 2 $ZRB
fi
if [ "$lmk" == "0" ]; then
	echo 0 > /sys/module/lowmemorykiller/parameters/minfree  
fi
if [ "$oc" == "1" ]; then
	echo 2499000 > /sys/module/cpu_tegra/parameters/cpu_user_cap
elif [ "$oc" == "0" ]; then
	echo 1 > /sys/kernel/tegra_gpu/gpu_cap_state
	echo 852000000 > /sys/kernel/tegra_gpu/gpu_cap_rate
fi
if [ "$gfix" == "1" ]; then
	echo 612000 > /sys/devices/system/cpu/cpufreq/interactive/hispeed_freq
	echo "65 510000:75 714000:85" > /sys/devices/system/cpu/cpufreq/interactive/target_loads
	chmod 444 /sys/devices/system/cpu/cpufreq/interactive/hispeed_freq
	chmod 444 /sys/devices/system/cpu/cpufreq/interactive/target_loads
fi
if [ "$dtw" == "0" ]; then
	echo 0 > /sys/devices/platform/spi-tegra114.2/spi_master/spi2/spi2.0/input/input0/wake_gesture
fi
if [ "$fs" == "0" ]; then
	echo 0 > /sys/module/sync/parameters/fsync_enabled
fi
if [ "$fc" == "1" ]; then
	echo 1 > /sys/kernel/fast_charge/force_fast_charge
fi
if [ -e $CSWAP ] && [ "$cswap" == "0" ]; then
	rm $CSWAP
fi
